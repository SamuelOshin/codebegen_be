# Docker Compose configuration
# Docker Compose configuration for local development
# Includes PostgreSQL, Redis, and the codebegen API service

version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://codebegen:password@db:5432/codebegen
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ../app:/app/app
      - ../ai_models:/app/ai_models
      - ../templates:/app/templates
      - model_cache:/app/models
    depends_on:
      - db
      - redis
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: codebegen
      POSTGRES_USER: codebegen
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Background worker for AI generation
  worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    environment:
      - DATABASE_URL=postgresql://codebegen:password@db:5432/codebegen
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ../app:/app/app
      - ../ai_models:/app/ai_models
      - model_cache:/app/models
    depends_on:
      - db
      - redis
    command: celery -A app.worker worker --loglevel=info

volumes:
  postgres_data:
  redis_data:
  model_cache: